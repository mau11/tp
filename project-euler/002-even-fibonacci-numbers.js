// #2
/* Even Fibonacci numbers
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
const getFib = (max) => {
  let seq = [1, 2]
  for(let i = 1; i < max; i++) {
    // make sure the upcoming fibonacci number is less than our max before adding it
    if((seq[i] + seq[i - 1]) < max) {
      seq.push(seq[i] + seq[i - 1])
    } else {
      break
    }
  }
  return seq
}

const getEvens = (arr) => {
  let sum = 0
  arr.map(x => {
    if (x % 2 === 0) {
      sum += x
    }
  })
  console.log('RESULT:', sum)
  return sum
}

getEvens(getFib(4000000)) // RESULT: 4613732
